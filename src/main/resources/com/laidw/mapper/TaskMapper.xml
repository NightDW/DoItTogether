<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.laidw.mapper.TaskMapper">

    <!-- =============================抽取SQL片段============================= -->

    <!-- 表名 -->
    <sql id="tableName">
        t_task
    </sql>

    <!-- 插入表时涉及的列，后续又新增了acc_user_id字段 -->
    <sql id="insertTableCols">
        (pub_time, fin_time, title, content, result, group_id, acc_id, acc_user_id, father_id, has_son)
    </sql>

    <!-- 插入表时涉及的类的属性 -->
    <sql id="insertClassAtts">
        (#{pubTime}, #{finTime}, #{title}, #{content}, #{result}, #{groupId}, #{acceptorPubInfo.id}, #{acceptorPubInfo.userPubInfo.id}, #{fatherId}, #{hasSon})
    </sql>

    <!-- WHERE id = #{id} -->
    <sql id="whereId">
        WHERE id = #{id}
    </sql>

    <!-- 无条件更新的SET语句 -->
    <sql id="updateSetting">
        pub_time = #{pubTime},
        fin_time = #{finTime},
        title = #{title},
        content = #{content},
        result = #{result},
        group_id = #{groupId},
        acc_id = #{acceptorPubInfo.id},
        acc_user_id = #{acceptorPubInfo.userPubInfo.id},
        father_id = #{fatheId},
        has_son = #{hasSon},
    </sql>

    <!-- 只更新非空字段时的SET语句 -->
    <sql id="updateSelectivelySetting">
        <if test="pubTime != null">
            pub_time = #{pubTime},
        </if>
        <if test="finTime != null">
            fin_time = #{finTime},
        </if>
        <if test="title != null">
            title = #{title},
        </if>
        <if test="content != null">
            content = #{content},
        </if>
        <if test="result != null">
            result = #{result},
        </if>
        <if test="groupId != null">
            group_id = #{groupId},
        </if>
        <if test="acceptorPubInfo != null">
            acc_id = #{acceptorPubInfo.id},
            acc_user_id = #{acceptorPubInfo.userPubInfo.id},
        </if>
        <if test="fatherId != null">
            father_id = #{fatherId},
        </if>
        <if test="hasSon != null">
            has_son = #{hasSon},
        </if>
    </sql>

    <!-- =============================抽取SQL片段============================= -->


    <!-- =============================定义封装规则============================= -->

    <!-- 只查询出本条记录，不再查询它的子任务 -->
    <resultMap id="recordMap" type="com.laidw.entity.Task">
        <id column="id" property="id" />
        <result column="pub_time" property="pubTime" />
        <result column="fin_time" property="finTime" />
        <result column="title" property="title" />
        <result column="content" property="content" />
        <result column="result" property="result" />
        <result column="group_id" property="groupId" />
        <result column="has_son" property="hasSon" />
        <result column="father_id" property="fatherId" />
        <association property="acceptorPubInfo" column="acc_id"
                     select="com.laidw.mapper.MembershipMapper.selectMembershipPubInfoById" />
    </resultMap>

    <!-- 完整的映射，会查询出子任务 -->
    <resultMap id="taskMap" type="com.laidw.entity.Task" extends="recordMap">
        <collection property="sons" column="id"
                    select="com.laidw.mapper.TaskMapper.selectFullTasksByFatherId" />
    </resultMap>

    <!-- =============================定义封装规则============================= -->


    <!-- =============================编写SQL语句============================= -->

    <insert id="insertTask" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO
        <include refid="tableName" />
        <include refid="insertTableCols" />
        VALUES
        <include refid="insertClassAtts" />
    </insert>

    <delete id="deleteTasksByFatherId">
        DELETE FROM
        <include refid="tableName" />
        WHERE father_id = #{id}
    </delete>

    <delete id="deleteTaskById">
        DELETE FROM
        <include refid="tableName" />
        <include refid="whereId" />
    </delete>

    <update id="clearTasksFatherIdInThisGroup">
        UPDATE
        <include refid="tableName" />
        SET father_id = NULL
        WHERE group_id = #{gid}
    </update>

    <delete id="deleteTasksByGroupId">
        DELETE FROM
        <include refid="tableName" />
        WHERE group_id = #{gid}
    </delete>

    <update id="updateTaskByIdSelectively">
        UPDATE
        <include refid="tableName" />
        <set>
            <include refid="updateSelectivelySetting" />
        </set>
        <include refid="whereId" />
    </update>

    <update id="clearUnfinishedTaskAcceptorById">
        UPDATE
        <include refid="tableName" />
        SET acc_id = NULL, acc_user_id = NULL
        WHERE id = #{id} AND fin_time IS NULL
    </update>

    <update id="giveUpMyUnfinishedTasksInThisGroup">
        UPDATE
        <include refid="tableName" />
        SET acc_id = NULL, acc_user_id = NULL
        WHERE acc_id = #{mid} AND group_id = #{gid} AND fin_time IS NULL
    </update>

    <update id="transferFinishedTaskAccIdInThisGroup">
        UPDATE
        <include refid="tableName" />
        SET acc_id = #{nmid}, acc_user_id = #{nuid}
        WHERE acc_id = #{omid} AND group_id = #{gid} AND fin_time IS NOT NULL
    </update>

    <select id="selectFullTaskById" resultMap="taskMap">
        SELECT * FROM
        <include refid="tableName" />
        <include refid="whereId" />
    </select>

    <select id="selectTaskById" resultMap="recordMap">
        SELECT * FROM
        <include refid="tableName" />
        <include refid="whereId" />
    </select>

    <select id="selectFullTasksByFatherId" resultMap="taskMap">
        SELECT * FROM
        <include refid="tableName" />
        WHERE father_id = #{tid}
    </select>

    <select id="selectTasksByFatherId" resultMap="recordMap">
        SELECT * FROM
        <include refid="tableName" />
        WHERE father_id = #{tid}
    </select>

    <select id="selectTasksByAccUserId" resultMap="recordMap">
        SELECT * FROM
        <include refid="tableName" />
        WHERE acc_user_id = #{uid}
    </select>

    <select id="selectRootFullTasksByGroupId" resultMap="taskMap">
        SELECT * FROM
        <include refid="tableName" />
        WHERE group_id = #{gid} AND father_id IS NULL
    </select>

    <!-- =============================编写SQL语句============================= -->

</mapper>